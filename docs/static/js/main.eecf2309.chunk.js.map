{"version":3,"sources":["ImageGallery.tsx","Fact.tsx","Card.tsx","helper.ts","Swipe.tsx","glossary.ts","Cards.tsx","Loading.tsx","Nothing.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","div","ImageCrop","window","innerWidth","LastOverlay","NextOverlay","Image","img","Dots","Dot","props","active","ImageGallery","imageUrls","useState","current","setCurrent","onClick","length","map","url","i","key","style","backgroundImage","height","FactType","Fact","type","option","drinking","smoking","lookingFor","starSign","getIconByType","Profile","index","Basic","Name","Dist","Details","Bio","Card","card","latLong","km","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","getDistance","decimalLatitude","decimalLongitude","lat","long","toFixed","name","age","bio","facts","fact","Swipe","children","handleSwipeCard","x","y","position","setPosition","handlers","useSwipeable","onSwiping","deltaX","deltaY","dir","onSwiped","absX","top","left","transform","floor","frequency","chance","Chance","CardsContainer","Actions","Action","Like","FontAwesomeIcon","Dismiss","Super","Cards","animals","onFinished","cards","setCards","generateRandomFacts","random","push","useEffect","animal","first","gender","drop","isEmpty","icon","faTimes","href","uuid","rel","target","faStar","faHeart","Kangaroo","Loading","width","src","alt","Button","Nothing","onClickRandomLocation","Header","Content","navigator","console","log","App","undefined","setAnimals","viewedAnimals","setViewedAnimals","setLatLong","isFetching","setIsFetching","getAnimals","viewed","axios","get","then","res","data","occurrences","prev","handleRandomLocation","randomLat","floating","min","max","randomLong","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eecf2309.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\ninterface IProps {\n  imageUrls: string[];\n}\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n`;\nconst ImageCrop = styled.div`\n  width: 100%;\n  height: ${window.innerWidth}px;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst LastOverlay = styled.div`\n  height: ${window.innerWidth}px;\n  width: 40%;\n  position: absolute;\n  left: 0;\n`;\nconst NextOverlay = styled.div`\n  height: ${window.innerWidth}px;\n  width: 60%;\n  position: absolute;\n  right: 0;\n`;\nconst Image = styled.img`\n  display: inline-block;\n  width: 100%;\n  min-height: 280px;\n  max-height: 400px;\n  background-position: center center;\n  background-size: cover;\n`;\nconst Dots = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  bottom: 8px;\n  width: 100%;\n`;\nconst Dot = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n  margin: 4px;\n  background-color: ${props => (props.active ? \"#EF6D81\" : \"#f2f2f2\")};\n`;\nexport const ImageGallery = ({ imageUrls }: IProps) => {\n  const [current, setCurrent] = useState(0);\n  return (\n    <Container>\n      <ImageCrop>\n        <LastOverlay onClick={() => current > 0 && setCurrent(current - 1)} />\n        <NextOverlay\n          onClick={() =>\n            current < imageUrls.length - 1 && setCurrent(current + 1)\n          }\n        />\n        {imageUrls.map(\n          (url, i) =>\n            i === current && (\n              <Image\n                key={`${i}-${url}`}\n                style={{\n                  backgroundImage: `url(${url})`,\n                  height: window.innerWidth\n                }}\n              />\n            )\n        )}\n      </ImageCrop>\n      <Dots>\n        {imageUrls.length > 1 &&\n          imageUrls.map((url, i) => <Dot key={i} active={current === i} />)}\n      </Dots>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  border: 1px solid #8c8181;\n  padding: 2px 8px;\n  display: inline-flex;\n  border-radius: 16px;\n  align-items: center;\n  margin: 0 8px 8px 0;\n  font-size: 0.85em;\n`;\ninterface IProps {\n  type: FactType;\n  option: string;\n}\n\nexport enum FactType {\n  \"starSign\",\n  \"drinking\",\n  \"smoking\",\n  \"lookingFor\"\n}\n\nexport const Fact = ({ type, option }: IProps) => {\n  const getIconByType = () => {\n    switch (type) {\n      case FactType.drinking:\n        return \"🍷\";\n      case FactType.smoking:\n        return \"🚬\";\n      case FactType.lookingFor:\n        return \"🔍\";\n      case FactType.starSign:\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <Container>\n      {getIconByType()}\n      {option}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { getDistance } from \"./helper\";\nimport styled from \"styled-components\";\nimport { ImageGallery } from \"./ImageGallery\";\nimport { Fact } from \"./Fact\";\nconst Profile = styled.div`\n  margin: 0 8px;\n  width: calc(100% - 16px);\n  height: calc(100% - 8px);\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  border-radius: 8px;\n  overflow-y: scroll;\n  border: 1px solid #f2f2f2;\n  position: absolute;\n  z-index: ${props => 10 - props.index};\n`;\nconst Basic = styled.div`\n  padding: 24px 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Name = styled.div`\n  font-weight: bold;\n  font-size: 28px;\n`;\nconst Dist = styled.div`\n  color: #8c8181;\n  font-size: 12px;\n`;\nconst Details = styled.div`\n  padding: 0 8px 48px;\n`;\nconst Bio = styled.div`\n  margin-bottom: 24px;\n  white-space: pre-wrap;\n`;\nexport const Card = ({ card, latLong, index }) => {\n  const km = getDistance(\n    card.decimalLatitude,\n    card.decimalLongitude,\n    latLong.lat,\n    latLong.long\n  ).toFixed(1);\n  return (\n    <Profile index={index}>\n      <ImageGallery imageUrls={card.imageUrls} />\n      <Basic>\n        <Name>{`${card.name}, ${card.age}`}</Name>\n        <Dist>{km}km away</Dist>\n      </Basic>\n      <Details>\n        {card.bio && <Bio>{card.bio}</Bio>}\n        {card.facts &&\n          card.facts.map((fact, i) => (\n            <Fact key={i} type={fact.type} option={fact.option} />\n          ))}\n      </Details>\n    </Profile>\n  );\n};\n","export const getDistance = (lat1: number, lon1: number, lat2: number, lon2: number) => {\n  if (lat1 === lat2 && lon1 === lon2) {\n    return 0;\n  } else {\n    var radlat1 = (Math.PI * lat1) / 180;\n    var radlat2 = (Math.PI * lat2) / 180;\n    var theta = lon1 - lon2;\n    var radtheta = (Math.PI * theta) / 180;\n    var dist =\n      Math.sin(radlat1) * Math.sin(radlat2) +\n      Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    if (dist > 1) {\n      dist = 1;\n    }\n    dist = Math.acos(dist);\n    dist = (dist * 180) / Math.PI;\n    // dist in miles\n    dist = dist * 60 * 1.1515;\n    // dist in km\n    dist = dist * 1.609344;\n    return dist;\n  }\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSwipeable } from \"react-swipeable\";\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 10;\n`;\nexport const Swipe = ({ children, handleSwipeCard }) => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const handleSwiping = ({ deltaX, deltaY, dir }) => {\n    if (dir === \"Left\" || dir === \"Right\") {\n      setPosition({ x: -deltaX, y: -deltaY });\n    }\n  };\n  const handleSwiped = ({ absX }) => {\n    setPosition({ x: 0, y: 0 });\n    if (absX > window.innerWidth / 2) {\n      handleSwipeCard();\n    }\n  };\n  const handlers = useSwipeable({\n    onSwiping: handleSwiping,\n    onSwiped: handleSwiped\n  });\n  return (\n    <Container\n      {...handlers}\n      style={{\n        top: position.y,\n        left: position.x,\n        transform: `rotate(${Math.floor(position.x / 10)}deg)`\n      }}\n    >\n      {children}\n    </Container>\n  );\n};\n","export const bio = [\n  \"Just your normal down to earth girl who likes to take long romantic walks on the beach and occasionally indulge in some midget porn.\",\n  \"tbh, I just want to get some free Chipotle out of this.\",\n  \"If you don’t look like photos, you have to buy me drinks until you do.\",\n  \"Law student. Lover of kittens (puppies also acceptable), witty banter, and long walks on the cheese aisle.\",\n  \"My mom thinks I'm pretty cool, I'm sure you will too. I can jungle and backflip literally what else do you need.\",\n  \"I like pizza.\",\n  \"Looking to meet some new people and see what happens 🙂\",\n  \"Aussie travelling in Australia.\",\n  \"This is the beginning of the sentence you just finished reading.\",\n  \"I’m just here for the free food.\",\n  \"Here for a good time, not a long time. Avid traveler.\",\n  \"6’4 and my Kung-fu is on point.\",\n  \"I really like movies with spaceships in them.\",\n  \"I will jump to any height. Just ask.\",\n  \" Likes poop jokes, can stay out late on a school night, and isn’t afraid to talk politics on a first date.\",\n  \"sunrise > sunset\",\n  \"I’m just a boy, standing in front of a bunch of people on an app, and asking them to love me.\",\n  \"“This one’s got real potential.” – My 90+ next door neighbor\",\n  \"I'm not good with bios\",\n  \"No hookups only love\",\n  \"I'm open and honest but little mystery keeps the spark alive\",\n  \"No lying, no cheating, no drama\",\n  \"Don’t like me? Cool, I don’t wake up every day to impress you. Do whatever you want to do girls…\",\n  \"Beer pong expert, tinder scientist, booty wizard.\",\n  \"I hear you like bad girls, I'm bad at everything.\",\n  \"I’m not the type of girl you have to hold in farts for, but rather the type of girl you want to hold in farts for.\"\n];\n\nexport const starSign = [\n  \"♈Aries\",\n  \"♉Taurus\",\n  \"♊Gemini\",\n  \"♋Cancer\",\n  \"♌Leo\",\n  \"♍Virgo\",\n  \"♎Libra\",\n  \"♏Scorpio\",\n  \"♐Sagittarius\",\n  \"♑Capricorn\",\n  \"♒Aquarius\",\n  \"♓Pisces\"\n];\nexport const frequency = [\"Never\", \"Occasionally\", \"Socially\", \"Often\"];\nexport const lookingFor = [\n  \"Monogamous relationship\",\n  \"New friends\",\n  \"Polyamorous relationship\",\n  \"Not sure yet\"\n];\n","import React, { useState, useEffect } from \"react\";\nimport drop from \"lodash/drop\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Card } from \"./Card\";\nimport { Swipe } from \"./Swipe\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faTimes, faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport Chance from \"chance\";\nimport { bio } from \"./glossary\";\nimport { FactType } from \"./Fact\";\nimport { starSign, frequency, lookingFor } from \"./glossary\";\nconst chance = new Chance();\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\nconst CardsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\nconst Actions = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n  box-sizing: border-box;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  z-index: 100;\n  background-image: linear-gradient(\n    rgba(237, 237, 237, 0),\n    rgba(237, 237, 237, 1)\n  );\n`;\nconst Action = styled.div`\n  cursor: pointer;\n  height: 35px;\n  width: 35px;\n  border-radius: 35px;\n  margin: 0 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: #ededed solid 3px;\n  background-color: white;\n`;\nconst Like = styled(FontAwesomeIcon)`\n  color: #ef6d81;\n`;\nconst Dismiss = styled(FontAwesomeIcon)`\n  color: #8c8181;\n`;\nconst Super = styled(FontAwesomeIcon)`\n  color: #14cbcc;\n`;\n\nexport const Cards = ({ animals, onFinished, latLong }) => {\n  const [cards, setCards] = useState(animals);\n  const generateRandomFacts = () => {\n    let facts = [];\n    Math.random() < 0.8 &&\n      facts.push({\n        type: FactType.starSign,\n        option: starSign[Math.floor(Math.random() * starSign.length)]\n      });\n    Math.random() < 0.3 &&\n      facts.push({\n        type: FactType.drinking,\n        option: frequency[Math.floor(Math.random() * frequency.length)]\n      });\n    Math.random() < 0.6 &&\n      facts.push({\n        type: FactType.lookingFor,\n        option: lookingFor[Math.floor(Math.random() * lookingFor.length)]\n      });\n    Math.random() < 0.2 &&\n      facts.push({\n        type: FactType.smoking,\n        option: frequency[Math.floor(Math.random() * frequency.length)]\n      });\n    return facts;\n  };\n  useEffect(() => {\n    setCards(\n      animals.map(animal => ({\n        imageUrls: animal.imageUrls,\n        decimalLatitude: animal.decimalLatitude,\n        decimalLongitude: animal.decimalLongitude,\n        name: chance.first({ gender: \"female\" }),\n        age: Math.floor(Math.random() * 10 + 23),\n        bio: Math.random() > 0.5 && bio[Math.floor(Math.random() * bio.length)],\n        facts: generateRandomFacts()\n      }))\n    );\n  }, [animals]);\n  const handleSwipeCard = () => {\n    setCards(drop(cards));\n    if (cards.length === 1) {\n      onFinished();\n    }\n  };\n  if (isEmpty(cards)) {\n    return <div></div>;\n  }\n  return (\n    <Container>\n      <CardsContainer>\n        {cards.map((card, i) => {\n          if (i === 0)\n            return (\n              <Swipe key={`swipe-${i}`} handleSwipeCard={handleSwipeCard}>\n                <Card\n                  key={`card-${i}`}\n                  card={card}\n                  index={i}\n                  latLong={latLong}\n                />\n              </Swipe>\n            );\n          else\n            return (\n              <Card key={`card-${i}`} card={card} index={i} latLong={latLong} />\n            );\n        })}\n      </CardsContainer>\n      <Actions>\n        <Action onClick={handleSwipeCard}>\n          <Dismiss icon={faTimes} />\n        </Action>\n        <Action>\n          <a\n            href={`https://biocache.ala.org.au/occurrences/${cards[0].uuid}`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <Super icon={faStar} />\n          </a>\n        </Action>\n        <Action onClick={handleSwipeCard}>\n          <Like icon={faHeart} />\n        </Action>\n      </Actions>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  text-align: center;\n  margin-bottom: 84px;\n`;\nconst Kangaroo = styled.img`\n  margin-bottom: 32px;\n`;\nexport const Loading = () => (\n  <Container>\n    <Kangaroo width=\"150\" src=\"/kangaroo.svg\" alt=\"Kangaroo\" />\n    <div>Preparing to get you wilder...</div>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  text-align: center;\n  margin-bottom: 84px;\n`;\nconst Kangaroo = styled.img`\n  margin-bottom: 32px;\n`;\nconst Button = styled.div`\n  color: white;\n  background-color: #ef6d81;\n  padding: 8px 16px;\n  display: inline-block;\n  margin-top: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nexport const Nothing = ({ onClickRandomLocation }) => (\n  <Container>\n    <Kangaroo width=\"80\" src=\"/standing_kangaroo.svg\" alt=\"Kangaroo\" />\n    <div>Nothing is wilder than you are.</div>\n    <Button onClick={onClickRandomLocation}>Try a Random Location</Button>\n  </Container>\n);\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Cards } from \"./Cards\";\nimport styled from \"styled-components\";\nimport { Loading } from \"./Loading\";\nimport { Nothing } from \"./Nothing\";\nimport Chance from \"chance\";\nconst chance = new Chance();\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 850px;\n  max-width: 450px;\n  margin: auto;\n  background-color: #f2f2f2;\n  position: relative;\n`;\nconst Header = styled.div`\n  background-color: white;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 8px;\n`;\nconst Content = styled.div`\n  height: calc(100% - 58px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nif (\"geolocation\" in navigator) {\n  console.log(\"geolocation is available \");\n} else {\n  console.log(\"geolocation is not available \");\n}\nconst pageSize = 5;\nconst App: React.FC = () => {\n  const [animals, setAnimals] = useState(undefined);\n  const [viewedAnimals, setViewedAnimals] = useState(0);\n  const [latLong, setLatLong] = useState({\n    lat: -31.0,\n    long: 149.0\n  });\n  const [isFetching, setIsFetching] = useState(false);\n  const getAnimals = (lat, long, viewed) => {\n    setIsFetching(true);\n    axios\n      .get(\n        `https://biocache-ws.ala.org.au/ws/occurrences/search.json?q=*%3A*&fq=class%3A%22Mammalia%22&fq=family%3A%22Macropodidae%22&lat=${lat}&lon=${long}&radius=100&fq=multimedia:Image&facet=false&pageSize=${pageSize}&start=${viewed}&sort=identification_qualifier_s&dir=asc`\n      )\n      .then(res => {\n        setIsFetching(false);\n        setAnimals(res.data.occurrences);\n        setViewedAnimals(prev => prev + pageSize);\n        // console.log(\"res.data.occurrences :\", res.data.occurrences);\n      });\n  };\n  const handleRandomLocation = () => {\n    const randomLat = chance.floating({ min: -34, max: -33 });\n    const randomLong = chance.floating({ min: 148, max: 150 });\n    setViewedAnimals(0);\n    setLatLong({\n      lat: randomLat,\n      long: randomLong\n    });\n    getAnimals(randomLat, randomLong, 0);\n  };\n  useEffect(() => {\n    // navigator.geolocation.getCurrentPosition(position => {\n    //   setLatLong({\n    //     lat: position.coords.latitude,\n    //     long: position.coords.longitude\n    //   });\n    //   getAnimals(position.coords.latitude, position.coords.longitude, viewedAnimals);\n    // });\n    handleRandomLocation();\n  }, []);\n  return (\n    <Container>\n      <Header>\n        <img width=\"80\" src=\"/wilder_logo.png\" alt=\"Wilder Logo\" />\n      </Header>\n      <Content>\n        {!animals || isFetching ? (\n          <Loading />\n        ) : isEmpty(animals) ? (\n          <Nothing onClickRandomLocation={handleRandomLocation} />\n        ) : (\n          <Cards\n            animals={animals}\n            onFinished={() =>\n              getAnimals(latLong.lat, latLong.long, viewedAnimals)\n            }\n            latLong={latLong}\n          />\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}